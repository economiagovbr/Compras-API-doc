versions pytest-7.1.3, python-3.9.5.final.0
cwd=/opt/Compras-API-doc/tests
args=('endpoints_test.py', '-vv', '--debug')

  pytest_cmdline_main [hook]
      config: <_pytest.config.Config object at 0x7eff468fbc10>
    pytest_plugin_registered [hook]
        plugin: <Session tests exitstatus='<UNSET>' testsfailed=0 testscollected=0>
        manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
    finish pytest_plugin_registered --> [] [hook]
    pytest_configure [hook]
        config: <_pytest.config.Config object at 0x7eff468fbc10>
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x7eff468b6d00>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x7eff468b6c40>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
    early skip of rewriting module: faulthandler [assertion]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
    early skip of rewriting module: pdb [assertion]
    early skip of rewriting module: cmd [assertion]
    early skip of rewriting module: code [assertion]
    early skip of rewriting module: codeop [assertion]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.Config object at 0x7eff468fbc10>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.mark' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/mark/__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.main' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/main.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.runner' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/runner.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.fixtures' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/fixtures.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.helpconfig' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/helpconfig.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/python.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.terminal' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/terminal.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.debugging' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/debugging.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unittest' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/unittest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.capture' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/capture.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.skipping' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/skipping.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.legacypath' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/legacypath.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.tmpdir' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/tmpdir.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.monkeypatch' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/monkeypatch.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.recwarn' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/recwarn.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pastebin' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/pastebin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.nose' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/nose.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.assertion' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/assertion/__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.junitxml' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/junitxml.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.doctest' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/doctest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.cacheprovider' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/cacheprovider.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.freeze_support' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/freeze_support.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setuponly' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/setuponly.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setupplan' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/setupplan.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.stepwise' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/stepwise.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.warnings' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/warnings.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.logging' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/logging.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.reports' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/reports.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python_path' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/python_path.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unraisableexception' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/unraisableexception.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.threadexception' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/threadexception.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.faulthandler' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/faulthandler.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'schemathesis.extra.pytest_plugin' from '/home/eduardolauer/.local/lib/python3.9/site-packages/schemathesis/extra/pytest_plugin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_hypothesis_pytestplugin' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_hypothesis_pytestplugin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_subtests' from '/home/eduardolauer/.local/lib/python3.9/site-packages/pytest_subtests.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'anyio.pytest_plugin' from '/usr/local/lib/python3.9/dist-packages/anyio/pytest_plugin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <CaptureManager _method='fd' _global_capturing=<MultiCapture out=<FDCapture 1 oldfd=5 _state='suspended' tmpfile=<_io.TextIOWrapper name="<_io.FileIO name=6 mode='rb+' closefd=True>" mode='r+' encoding='utf-8'>> err=<FDCapture 2 oldfd=7 _state='suspended' tmpfile=<_io.TextIOWrapper name="<_io.FileIO name=8 mode='rb+' closefd=True>" mode='r+' encoding='utf-8'>> in_=<FDCapture 0 oldfd=3 _state='started' tmpfile=<_io.TextIOWrapper name='/dev/null' mode='r' encoding='UTF-8'>> _state='suspended' _in_suspended=False> _capture_fixture=None>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'conftest' from '/opt/Compras-API-doc/tests/conftest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <Session tests exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x7eff468b6d00>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x7eff468b6c40>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0x7eff4686c820>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.logging.LoggingPlugin object at 0x7eff4686cd90>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
    finish pytest_configure --> [] [hook]
    pytest_sessionstart [hook]
        session: <Session tests exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.Config object at 0x7eff468fbc10>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.mark' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/mark/__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.main' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/main.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.runner' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/runner.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.fixtures' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/fixtures.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.helpconfig' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/helpconfig.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/python.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.terminal' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/terminal.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.debugging' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/debugging.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unittest' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/unittest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.capture' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/capture.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.skipping' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/skipping.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.legacypath' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/legacypath.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.tmpdir' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/tmpdir.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.monkeypatch' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/monkeypatch.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.recwarn' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/recwarn.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pastebin' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/pastebin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.nose' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/nose.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.assertion' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/assertion/__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.junitxml' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/junitxml.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.doctest' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/doctest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.cacheprovider' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/cacheprovider.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.freeze_support' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/freeze_support.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setuponly' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/setuponly.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setupplan' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/setupplan.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.stepwise' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/stepwise.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.warnings' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/warnings.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.logging' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/logging.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.reports' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/reports.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python_path' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/python_path.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unraisableexception' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/unraisableexception.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.threadexception' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/threadexception.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.faulthandler' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/faulthandler.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'schemathesis.extra.pytest_plugin' from '/home/eduardolauer/.local/lib/python3.9/site-packages/schemathesis/extra/pytest_plugin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_hypothesis_pytestplugin' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_hypothesis_pytestplugin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_subtests' from '/home/eduardolauer/.local/lib/python3.9/site-packages/pytest_subtests.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'anyio.pytest_plugin' from '/usr/local/lib/python3.9/dist-packages/anyio/pytest_plugin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <CaptureManager _method='fd' _global_capturing=<MultiCapture out=<FDCapture 1 oldfd=5 _state='suspended' tmpfile=<_io.TextIOWrapper name="<_io.FileIO name=6 mode='rb+' closefd=True>" mode='r+' encoding='utf-8'>> err=<FDCapture 2 oldfd=7 _state='suspended' tmpfile=<_io.TextIOWrapper name="<_io.FileIO name=8 mode='rb+' closefd=True>" mode='r+' encoding='utf-8'>> in_=<FDCapture 0 oldfd=3 _state='started' tmpfile=<_io.TextIOWrapper name='/dev/null' mode='r' encoding='UTF-8'>> _state='suspended' _in_suspended=False> _capture_fixture=None>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'conftest' from '/opt/Compras-API-doc/tests/conftest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <Session tests exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x7eff468b6d00>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x7eff468b6c40>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0x7eff4686c820>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.logging.LoggingPlugin object at 0x7eff4686cd90>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.fixtures.FixtureManager object at 0x7eff468b6d60>
          manager: <_pytest.config.PytestPluginManager object at 0x7eff469c11f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_report_header [hook]
          config: <_pytest.config.Config object at 0x7eff468fbc10>
          start_path: /opt/Compras-API-doc/tests
          startdir: /opt/Compras-API-doc/tests
      finish pytest_report_header --> [['rootdir: /opt/Compras-API-doc/tests', 'plugins: schemathesis-3.17.2, hypothesis-6.54.6, subtests-0.7.0, anyio-3.4.0'], "hypothesis profile 'default' -> database=DirectoryBasedExampleDatabase('/opt/Compras-API-doc/tests/.hypothesis/examples')", 'cachedir: .pytest_cache', ['using: pytest-7.1.3', 'setuptools registered plugins:', '  schemathesis-3.17.2 at /home/eduardolauer/.local/lib/python3.9/site-packages/schemathesis/extra/pytest_plugin.py', '  hypothesis-6.54.6 at /home/eduardolauer/.local/lib/python3.9/site-packages/_hypothesis_pytestplugin.py', '  pytest-subtests-0.7.0 at /home/eduardolauer/.local/lib/python3.9/site-packages/pytest_subtests.py', '  anyio-3.4.0 at /usr/local/lib/python3.9/dist-packages/anyio/pytest_plugin.py']] [hook]
    finish pytest_sessionstart --> [] [hook]
    pytest_collection [hook]
        session: <Session tests exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
    perform_collect <Session tests exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0> ['endpoints_test.py'] [collection]
        pytest_collectstart [hook]
            collector: <Session tests exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Session tests exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        processing argument (PosixPath('/opt/Compras-API-doc/tests/endpoints_test.py'), []) [collection]
            pytest_collect_file [hook]
                parent: <Session tests exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /opt/Compras-API-doc/tests/endpoints_test.py
                path: /opt/Compras-API-doc/tests/endpoints_test.py
              pytest_pycollect_makemodule [hook]
                  parent: <Session tests exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                  module_path: /opt/Compras-API-doc/tests/endpoints_test.py
                  path: /opt/Compras-API-doc/tests/endpoints_test.py
              finish pytest_pycollect_makemodule --> <Module endpoints_test.py> [hook]
            finish pytest_collect_file --> [<Module endpoints_test.py>] [hook]
          matchnodes [<Module endpoints_test.py>] [] [collection]
            matchnodes finished ->  1 nodes [collection]
        finish pytest_make_collect_report --> <CollectReport '' lenresult=1 outcome='passed'> [hook]
        pytest_collectreport [hook]
            report: <CollectReport '' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
    genitems <Module endpoints_test.py> [collection]
      pytest_collectstart [hook]
          collector: <Module endpoints_test.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module endpoints_test.py>
      find_module called for: endpoints_test [assertion]
      matched test file (was specified on cmdline): '/opt/Compras-API-doc/tests/endpoints_test.py' [assertion]
      _read_pyc(/opt/Compras-API-doc/tests/endpoints_test.py): out of date [assertion]
      rewriting PosixPath('/opt/Compras-API-doc/tests/endpoints_test.py') [assertion]
      early skip of rewriting module: fastapi [assertion]
      early skip of rewriting module: starlette.status [assertion]
      early skip of rewriting module: starlette._pep562 [assertion]
      early skip of rewriting module: fastapi.applications [assertion]
      early skip of rewriting module: fastapi.routing [assertion]
      early skip of rewriting module: fastapi.params [assertion]
      early skip of rewriting module: fastapi.datastructures [assertion]
      early skip of rewriting module: fastapi.dependencies [assertion]
      early skip of rewriting module: fastapi.dependencies.models [assertion]
      early skip of rewriting module: fastapi.security [assertion]
      early skip of rewriting module: fastapi.security.api_key [assertion]
      early skip of rewriting module: fastapi.openapi [assertion]
      early skip of rewriting module: fastapi.openapi.models [assertion]
      early skip of rewriting module: fastapi.logger [assertion]
      early skip of rewriting module: fastapi.security.base [assertion]
      early skip of rewriting module: fastapi.security.http [assertion]
      early skip of rewriting module: fastapi.exceptions [assertion]
      early skip of rewriting module: fastapi.security.utils [assertion]
      early skip of rewriting module: fastapi.security.oauth2 [assertion]
      early skip of rewriting module: fastapi.param_functions [assertion]
      early skip of rewriting module: fastapi.security.open_id_connect_url [assertion]
      early skip of rewriting module: fastapi.dependencies.utils [assertion]
      early skip of rewriting module: fastapi.concurrency [assertion]
      early skip of rewriting module: fastapi.utils [assertion]
      early skip of rewriting module: fastapi.openapi.constants [assertion]
      early skip of rewriting module: fastapi.encoders [assertion]
      early skip of rewriting module: fastapi.types [assertion]
      early skip of rewriting module: fastapi.exception_handlers [assertion]
      early skip of rewriting module: fastapi.middleware [assertion]
      early skip of rewriting module: fastapi.middleware.asyncexitstack [assertion]
      early skip of rewriting module: fastapi.openapi.docs [assertion]
      early skip of rewriting module: fastapi.openapi.utils [assertion]
      early skip of rewriting module: fastapi.responses [assertion]
      early skip of rewriting module: ujson [assertion]
      early skip of rewriting module: orjson [assertion]
      early skip of rewriting module: orjson.orjson [assertion]
      early skip of rewriting module: fastapi.background [assertion]
      early skip of rewriting module: fastapi.requests [assertion]
      early skip of rewriting module: fastapi.websockets [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module endpoints_test.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module endpoints_test.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/home/eduardolauer/.local/lib/python3.9/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module endpoints_test.py>
            name: requests
            obj: <module 'requests' from '/usr/local/lib/python3.9/dist-packages/requests/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module endpoints_test.py>
            name: status
            obj: <module 'starlette.status' from '/home/eduardolauer/.local/lib/python3.9/site-packages/starlette/status.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module endpoints_test.py>
            name: pytest
            obj: <module 'pytest' from '/home/eduardolauer/.local/lib/python3.9/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module endpoints_test.py>
            name: headers
            obj: {'accept': 'application/json', 'Content-Type': 'application/json', 'User-Agent': 'request'}
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module endpoints_test.py>
            name: URL
            obj: http://compras.dados.gov.br
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module endpoints_test.py>
            name: query_endpoints
            obj: ['/comprasContratos/v1/contratos?data_publicacao=2021-04-20']
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module endpoints_test.py>
            name: path_endpoints
            obj: ['/comprasContratos/doc/contrato/114325', '/comprasContratos/doc/contrato/136100/cronogramas', '/comprasContratos/doc/contrato/136100/cronogramas/28589500', '/comprasContratos/doc/contrato/84650/despesas_acessorias', '/comprasContratos/doc/contrato/84650/despesas_acessorias/215', '/comprasContratos/doc/contrato/50500/empenhos', '/comprasContratos/doc/contrato/2629/empenhos/8415275', '/comprasContratos/doc/contrato/36939/faturas', '/comprasContratos/doc/contrato/94113/faturas/78330', '/comprasContratos/doc/contrato/105754/garantias', '/comprasContratos/doc/contrato/115090/garantias/8423', '/comprasContratos/doc/contrato/136100/historicos', '/comprasContratos/doc/contrato/93390/historicos/337465', '/comprasContratos/doc/contrato/136100/itens_compras_contratos', '/comprasContratos/doc/contrato/136100/itens_compras_contratos/853152', '/comprasContratos/doc/contrato/119441/prepostos', '/comprasContratos/doc/contrato/44820/prepostos/2665', '/comprasContratos/doc/contrato/2268/responsaveis', '/comprasContratos/doc/contrato/84390/responsaveis/41285', '/comprasContratos/doc/contrato/4198/terceirizados', '/comprasContratos/doc/contrato/3140/terceirizados/4325']
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module endpoints_test.py>
            name: test_query_endpoint
            obj: <function test_query_endpoint at 0x7eff2de03790>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7eff2de2e760>
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x7eff468fbc10>
                val: /comprasContratos/v1/contratos?data_publicacao=2021-04-20
                argname: endpoint
            finish pytest_make_parametrize_id --> None [hook]
          early skip of rewriting module: encodings.unicode_escape [assertion]
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_query_endpoint[/comprasContratos/v1/contratos?data_publicacao=2021-04-20]>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module endpoints_test.py>
            name: test_path_endpoint
            obj: <function test_path_endpoint at 0x7eff2de03e50>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7eff2de2e760>
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x7eff468fbc10>
                val: /comprasContratos/doc/contrato/114325
                argname: endpoint
            finish pytest_make_parametrize_id --> None [hook]
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x7eff468fbc10>
                val: /comprasContratos/doc/contrato/136100/cronogramas
                argname: endpoint
            finish pytest_make_parametrize_id --> None [hook]
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x7eff468fbc10>
                val: /comprasContratos/doc/contrato/136100/cronogramas/28589500
                argname: endpoint
            finish pytest_make_parametrize_id --> None [hook]
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x7eff468fbc10>
                val: /comprasContratos/doc/contrato/84650/despesas_acessorias
                argname: endpoint
            finish pytest_make_parametrize_id --> None [hook]
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x7eff468fbc10>
                val: /comprasContratos/doc/contrato/84650/despesas_acessorias/215
                argname: endpoint
            finish pytest_make_parametrize_id --> None [hook]
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x7eff468fbc10>
                val: /comprasContratos/doc/contrato/50500/empenhos
                argname: endpoint
            finish pytest_make_parametrize_id --> None [hook]
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x7eff468fbc10>
                val: /comprasContratos/doc/contrato/2629/empenhos/8415275
                argname: endpoint
            finish pytest_make_parametrize_id --> None [hook]
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x7eff468fbc10>
                val: /comprasContratos/doc/contrato/36939/faturas
                argname: endpoint
            finish pytest_make_parametrize_id --> None [hook]
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x7eff468fbc10>
                val: /comprasContratos/doc/contrato/94113/faturas/78330
                argname: endpoint
            finish pytest_make_parametrize_id --> None [hook]
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x7eff468fbc10>
                val: /comprasContratos/doc/contrato/105754/garantias
                argname: endpoint
            finish pytest_make_parametrize_id --> None [hook]
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x7eff468fbc10>
                val: /comprasContratos/doc/contrato/115090/garantias/8423
                argname: endpoint
            finish pytest_make_parametrize_id --> None [hook]
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x7eff468fbc10>
                val: /comprasContratos/doc/contrato/136100/historicos
                argname: endpoint
            finish pytest_make_parametrize_id --> None [hook]
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x7eff468fbc10>
                val: /comprasContratos/doc/contrato/93390/historicos/337465
                argname: endpoint
            finish pytest_make_parametrize_id --> None [hook]
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x7eff468fbc10>
                val: /comprasContratos/doc/contrato/136100/itens_compras_contratos
                argname: endpoint
            finish pytest_make_parametrize_id --> None [hook]
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x7eff468fbc10>
                val: /comprasContratos/doc/contrato/136100/itens_compras_contratos/853152
                argname: endpoint
            finish pytest_make_parametrize_id --> None [hook]
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x7eff468fbc10>
                val: /comprasContratos/doc/contrato/119441/prepostos
                argname: endpoint
            finish pytest_make_parametrize_id --> None [hook]
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x7eff468fbc10>
                val: /comprasContratos/doc/contrato/44820/prepostos/2665
                argname: endpoint
            finish pytest_make_parametrize_id --> None [hook]
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x7eff468fbc10>
                val: /comprasContratos/doc/contrato/2268/responsaveis
                argname: endpoint
            finish pytest_make_parametrize_id --> None [hook]
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x7eff468fbc10>
                val: /comprasContratos/doc/contrato/84390/responsaveis/41285
                argname: endpoint
            finish pytest_make_parametrize_id --> None [hook]
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x7eff468fbc10>
                val: /comprasContratos/doc/contrato/4198/terceirizados
                argname: endpoint
            finish pytest_make_parametrize_id --> None [hook]
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x7eff468fbc10>
                val: /comprasContratos/doc/contrato/3140/terceirizados/4325
                argname: endpoint
            finish pytest_make_parametrize_id --> None [hook]
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_path_endpoint[/comprasContratos/doc/contrato/114325]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/cronogramas]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/cronogramas/28589500]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/84650/despesas_acessorias]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/84650/despesas_acessorias/215]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/50500/empenhos]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/2629/empenhos/8415275]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/36939/faturas]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/94113/faturas/78330]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/105754/garantias]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/115090/garantias/8423]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/historicos]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/93390/historicos/337465]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/itens_compras_contratos]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/itens_compras_contratos/853152]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/119441/prepostos]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/44820/prepostos/2665]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/2268/responsaveis]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/84390/responsaveis/41285]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/4198/terceirizados]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/3140/terceirizados/4325]>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'endpoints_test.py' lenresult=22 outcome='passed'> [hook]
    genitems <Function test_query_endpoint[/comprasContratos/v1/contratos?data_publicacao=2021-04-20]> [collection]
      pytest_itemcollected [hook]
          item: <Function test_query_endpoint[/comprasContratos/v1/contratos?data_publicacao=2021-04-20]>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_path_endpoint[/comprasContratos/doc/contrato/114325]> [collection]
      pytest_itemcollected [hook]
          item: <Function test_path_endpoint[/comprasContratos/doc/contrato/114325]>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/cronogramas]> [collection]
      pytest_itemcollected [hook]
          item: <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/cronogramas]>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/cronogramas/28589500]> [collection]
      pytest_itemcollected [hook]
          item: <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/cronogramas/28589500]>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_path_endpoint[/comprasContratos/doc/contrato/84650/despesas_acessorias]> [collection]
      pytest_itemcollected [hook]
          item: <Function test_path_endpoint[/comprasContratos/doc/contrato/84650/despesas_acessorias]>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_path_endpoint[/comprasContratos/doc/contrato/84650/despesas_acessorias/215]> [collection]
      pytest_itemcollected [hook]
          item: <Function test_path_endpoint[/comprasContratos/doc/contrato/84650/despesas_acessorias/215]>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_path_endpoint[/comprasContratos/doc/contrato/50500/empenhos]> [collection]
      pytest_itemcollected [hook]
          item: <Function test_path_endpoint[/comprasContratos/doc/contrato/50500/empenhos]>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_path_endpoint[/comprasContratos/doc/contrato/2629/empenhos/8415275]> [collection]
      pytest_itemcollected [hook]
          item: <Function test_path_endpoint[/comprasContratos/doc/contrato/2629/empenhos/8415275]>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_path_endpoint[/comprasContratos/doc/contrato/36939/faturas]> [collection]
      pytest_itemcollected [hook]
          item: <Function test_path_endpoint[/comprasContratos/doc/contrato/36939/faturas]>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_path_endpoint[/comprasContratos/doc/contrato/94113/faturas/78330]> [collection]
      pytest_itemcollected [hook]
          item: <Function test_path_endpoint[/comprasContratos/doc/contrato/94113/faturas/78330]>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_path_endpoint[/comprasContratos/doc/contrato/105754/garantias]> [collection]
      pytest_itemcollected [hook]
          item: <Function test_path_endpoint[/comprasContratos/doc/contrato/105754/garantias]>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_path_endpoint[/comprasContratos/doc/contrato/115090/garantias/8423]> [collection]
      pytest_itemcollected [hook]
          item: <Function test_path_endpoint[/comprasContratos/doc/contrato/115090/garantias/8423]>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/historicos]> [collection]
      pytest_itemcollected [hook]
          item: <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/historicos]>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_path_endpoint[/comprasContratos/doc/contrato/93390/historicos/337465]> [collection]
      pytest_itemcollected [hook]
          item: <Function test_path_endpoint[/comprasContratos/doc/contrato/93390/historicos/337465]>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/itens_compras_contratos]> [collection]
      pytest_itemcollected [hook]
          item: <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/itens_compras_contratos]>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/itens_compras_contratos/853152]> [collection]
      pytest_itemcollected [hook]
          item: <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/itens_compras_contratos/853152]>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_path_endpoint[/comprasContratos/doc/contrato/119441/prepostos]> [collection]
      pytest_itemcollected [hook]
          item: <Function test_path_endpoint[/comprasContratos/doc/contrato/119441/prepostos]>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_path_endpoint[/comprasContratos/doc/contrato/44820/prepostos/2665]> [collection]
      pytest_itemcollected [hook]
          item: <Function test_path_endpoint[/comprasContratos/doc/contrato/44820/prepostos/2665]>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_path_endpoint[/comprasContratos/doc/contrato/2268/responsaveis]> [collection]
      pytest_itemcollected [hook]
          item: <Function test_path_endpoint[/comprasContratos/doc/contrato/2268/responsaveis]>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_path_endpoint[/comprasContratos/doc/contrato/84390/responsaveis/41285]> [collection]
      pytest_itemcollected [hook]
          item: <Function test_path_endpoint[/comprasContratos/doc/contrato/84390/responsaveis/41285]>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_path_endpoint[/comprasContratos/doc/contrato/4198/terceirizados]> [collection]
      pytest_itemcollected [hook]
          item: <Function test_path_endpoint[/comprasContratos/doc/contrato/4198/terceirizados]>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_path_endpoint[/comprasContratos/doc/contrato/3140/terceirizados/4325]> [collection]
      pytest_itemcollected [hook]
          item: <Function test_path_endpoint[/comprasContratos/doc/contrato/3140/terceirizados/4325]>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'endpoints_test.py' lenresult=22 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collection_modifyitems [hook]
          session: <Session tests exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          config: <_pytest.config.Config object at 0x7eff468fbc10>
          items: [<Function test_query_endpoint[/comprasContratos/v1/contratos?data_publicacao=2021-04-20]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/114325]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/cronogramas]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/cronogramas/28589500]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/84650/despesas_acessorias]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/84650/despesas_acessorias/215]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/50500/empenhos]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/2629/empenhos/8415275]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/36939/faturas]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/94113/faturas/78330]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/105754/garantias]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/115090/garantias/8423]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/historicos]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/93390/historicos/337465]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/itens_compras_contratos]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/itens_compras_contratos/853152]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/119441/prepostos]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/44820/prepostos/2665]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/2268/responsaveis]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/84390/responsaveis/41285]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/4198/terceirizados]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/3140/terceirizados/4325]>]
      finish pytest_collection_modifyitems --> [] [hook]
      pytest_collection_finish [hook]
          session: <Session tests exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        pytest_report_collectionfinish [hook]
            config: <_pytest.config.Config object at 0x7eff468fbc10>
            items: [<Function test_query_endpoint[/comprasContratos/v1/contratos?data_publicacao=2021-04-20]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/114325]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/cronogramas]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/cronogramas/28589500]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/84650/despesas_acessorias]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/84650/despesas_acessorias/215]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/50500/empenhos]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/2629/empenhos/8415275]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/36939/faturas]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/94113/faturas/78330]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/105754/garantias]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/115090/garantias/8423]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/historicos]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/93390/historicos/337465]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/itens_compras_contratos]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/itens_compras_contratos/853152]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/119441/prepostos]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/44820/prepostos/2665]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/2268/responsaveis]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/84390/responsaveis/41285]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/4198/terceirizados]>, <Function test_path_endpoint[/comprasContratos/doc/contrato/3140/terceirizados/4325]>]
            start_path: /opt/Compras-API-doc/tests
            startdir: /opt/Compras-API-doc/tests
        finish pytest_report_collectionfinish --> [] [hook]
      finish pytest_collection_finish --> [] [hook]
    finish pytest_collection --> None [hook]
    pytest_runtestloop [hook]
        session: <Session tests exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=22>
      pytest_runtest_protocol [hook]
          item: <Function test_query_endpoint[/comprasContratos/v1/contratos?data_publicacao=2021-04-20]>
          nextitem: <Function test_path_endpoint[/comprasContratos/doc/contrato/114325]>
        pytest_runtest_logstart [hook]
            nodeid: endpoints_test.py::test_query_endpoint[/comprasContratos/v1/contratos?data_publicacao=2021-04-20]
            location: ('endpoints_test.py', 46, 'test_query_endpoint[/comprasContratos/v1/contratos?data_publicacao=2021-04-20]')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_query_endpoint[/comprasContratos/v1/contratos?data_publicacao=2021-04-20]>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='endpoint' scope='function' baseid=''>
              request: <SubRequest 'endpoint' for <Function test_query_endpoint[/comprasContratos/v1/contratos?data_publicacao=2021-04-20]>>
          finish pytest_fixture_setup --> /comprasContratos/v1/contratos?data_publicacao=2021-04-20 [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_query_endpoint[/comprasContratos/v1/contratos?data_publicacao=2021-04-20]>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'endpoints_test.py::test_query_endpoint[/comprasContratos/v1/contratos?data_publicacao=2021-04-20]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'endpoints_test.py::test_query_endpoint[/comprasContratos/v1/contratos?data_publicacao=2021-04-20]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'endpoints_test.py::test_query_endpoint[/comprasContratos/v1/contratos?data_publicacao=2021-04-20]' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7eff468fbc10>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_query_endpoint[/comprasContratos/v1/contratos?data_publicacao=2021-04-20]>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_query_endpoint[/comprasContratos/v1/contratos?data_publicacao=2021-04-20]>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_query_endpoint[/comprasContratos/v1/contratos?data_publicacao=2021-04-20]>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'endpoints_test.py::test_query_endpoint[/comprasContratos/v1/contratos?data_publicacao=2021-04-20]' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'endpoints_test.py::test_query_endpoint[/comprasContratos/v1/contratos?data_publicacao=2021-04-20]' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'endpoints_test.py::test_query_endpoint[/comprasContratos/v1/contratos?data_publicacao=2021-04-20]' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7eff468fbc10>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_query_endpoint[/comprasContratos/v1/contratos?data_publicacao=2021-04-20]>
            nextitem: <Function test_path_endpoint[/comprasContratos/doc/contrato/114325]>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='endpoint' scope='function' baseid=''>
              request: <SubRequest 'endpoint' for <Function test_query_endpoint[/comprasContratos/v1/contratos?data_publicacao=2021-04-20]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_query_endpoint[/comprasContratos/v1/contratos?data_publicacao=2021-04-20]>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'endpoints_test.py::test_query_endpoint[/comprasContratos/v1/contratos?data_publicacao=2021-04-20]' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'endpoints_test.py::test_query_endpoint[/comprasContratos/v1/contratos?data_publicacao=2021-04-20]' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'endpoints_test.py::test_query_endpoint[/comprasContratos/v1/contratos?data_publicacao=2021-04-20]' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7eff468fbc10>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: endpoints_test.py::test_query_endpoint[/comprasContratos/v1/contratos?data_publicacao=2021-04-20]
            location: ('endpoints_test.py', 46, 'test_query_endpoint[/comprasContratos/v1/contratos?data_publicacao=2021-04-20]')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_path_endpoint[/comprasContratos/doc/contrato/114325]>
          nextitem: <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/cronogramas]>
        pytest_runtest_logstart [hook]
            nodeid: endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/114325]
            location: ('endpoints_test.py', 57, 'test_path_endpoint[/comprasContratos/doc/contrato/114325]')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/114325]>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='endpoint' scope='function' baseid=''>
              request: <SubRequest 'endpoint' for <Function test_path_endpoint[/comprasContratos/doc/contrato/114325]>>
          finish pytest_fixture_setup --> /comprasContratos/doc/contrato/114325 [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/114325]>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/114325]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/114325]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/114325]' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7eff468fbc10>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/114325]>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_path_endpoint[/comprasContratos/doc/contrato/114325]>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/114325]>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/114325]' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/114325]' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/114325]' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7eff468fbc10>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/114325]>
            nextitem: <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/cronogramas]>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='endpoint' scope='function' baseid=''>
              request: <SubRequest 'endpoint' for <Function test_path_endpoint[/comprasContratos/doc/contrato/114325]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/114325]>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/114325]' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/114325]' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/114325]' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7eff468fbc10>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/114325]
            location: ('endpoints_test.py', 57, 'test_path_endpoint[/comprasContratos/doc/contrato/114325]')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/cronogramas]>
          nextitem: <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/cronogramas/28589500]>
        pytest_runtest_logstart [hook]
            nodeid: endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/136100/cronogramas]
            location: ('endpoints_test.py', 57, 'test_path_endpoint[/comprasContratos/doc/contrato/136100/cronogramas]')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/cronogramas]>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='endpoint' scope='function' baseid=''>
              request: <SubRequest 'endpoint' for <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/cronogramas]>>
          finish pytest_fixture_setup --> /comprasContratos/doc/contrato/136100/cronogramas [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/cronogramas]>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/136100/cronogramas]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/136100/cronogramas]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/136100/cronogramas]' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7eff468fbc10>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/cronogramas]>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/cronogramas]>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/cronogramas]>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/136100/cronogramas]' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/136100/cronogramas]' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/136100/cronogramas]' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7eff468fbc10>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/cronogramas]>
            nextitem: <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/cronogramas/28589500]>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='endpoint' scope='function' baseid=''>
              request: <SubRequest 'endpoint' for <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/cronogramas]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/cronogramas]>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/136100/cronogramas]' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/136100/cronogramas]' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/136100/cronogramas]' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7eff468fbc10>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/136100/cronogramas]
            location: ('endpoints_test.py', 57, 'test_path_endpoint[/comprasContratos/doc/contrato/136100/cronogramas]')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/cronogramas/28589500]>
          nextitem: <Function test_path_endpoint[/comprasContratos/doc/contrato/84650/despesas_acessorias]>
        pytest_runtest_logstart [hook]
            nodeid: endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/136100/cronogramas/28589500]
            location: ('endpoints_test.py', 57, 'test_path_endpoint[/comprasContratos/doc/contrato/136100/cronogramas/28589500]')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/cronogramas/28589500]>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='endpoint' scope='function' baseid=''>
              request: <SubRequest 'endpoint' for <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/cronogramas/28589500]>>
          finish pytest_fixture_setup --> /comprasContratos/doc/contrato/136100/cronogramas/28589500 [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/cronogramas/28589500]>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/136100/cronogramas/28589500]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/136100/cronogramas/28589500]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/136100/cronogramas/28589500]' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7eff468fbc10>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/cronogramas/28589500]>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/cronogramas/28589500]>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/cronogramas/28589500]>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/136100/cronogramas/28589500]' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/136100/cronogramas/28589500]' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/136100/cronogramas/28589500]' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7eff468fbc10>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/cronogramas/28589500]>
            nextitem: <Function test_path_endpoint[/comprasContratos/doc/contrato/84650/despesas_acessorias]>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='endpoint' scope='function' baseid=''>
              request: <SubRequest 'endpoint' for <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/cronogramas/28589500]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/cronogramas/28589500]>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/136100/cronogramas/28589500]' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/136100/cronogramas/28589500]' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/136100/cronogramas/28589500]' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7eff468fbc10>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/136100/cronogramas/28589500]
            location: ('endpoints_test.py', 57, 'test_path_endpoint[/comprasContratos/doc/contrato/136100/cronogramas/28589500]')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_path_endpoint[/comprasContratos/doc/contrato/84650/despesas_acessorias]>
          nextitem: <Function test_path_endpoint[/comprasContratos/doc/contrato/84650/despesas_acessorias/215]>
        pytest_runtest_logstart [hook]
            nodeid: endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/84650/despesas_acessorias]
            location: ('endpoints_test.py', 57, 'test_path_endpoint[/comprasContratos/doc/contrato/84650/despesas_acessorias]')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/84650/despesas_acessorias]>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='endpoint' scope='function' baseid=''>
              request: <SubRequest 'endpoint' for <Function test_path_endpoint[/comprasContratos/doc/contrato/84650/despesas_acessorias]>>
          finish pytest_fixture_setup --> /comprasContratos/doc/contrato/84650/despesas_acessorias [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/84650/despesas_acessorias]>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/84650/despesas_acessorias]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/84650/despesas_acessorias]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/84650/despesas_acessorias]' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7eff468fbc10>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/84650/despesas_acessorias]>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_path_endpoint[/comprasContratos/doc/contrato/84650/despesas_acessorias]>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/84650/despesas_acessorias]>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/84650/despesas_acessorias]' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/84650/despesas_acessorias]' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/84650/despesas_acessorias]' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7eff468fbc10>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/84650/despesas_acessorias]>
            nextitem: <Function test_path_endpoint[/comprasContratos/doc/contrato/84650/despesas_acessorias/215]>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='endpoint' scope='function' baseid=''>
              request: <SubRequest 'endpoint' for <Function test_path_endpoint[/comprasContratos/doc/contrato/84650/despesas_acessorias]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/84650/despesas_acessorias]>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/84650/despesas_acessorias]' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/84650/despesas_acessorias]' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/84650/despesas_acessorias]' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7eff468fbc10>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/84650/despesas_acessorias]
            location: ('endpoints_test.py', 57, 'test_path_endpoint[/comprasContratos/doc/contrato/84650/despesas_acessorias]')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_path_endpoint[/comprasContratos/doc/contrato/84650/despesas_acessorias/215]>
          nextitem: <Function test_path_endpoint[/comprasContratos/doc/contrato/50500/empenhos]>
        pytest_runtest_logstart [hook]
            nodeid: endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/84650/despesas_acessorias/215]
            location: ('endpoints_test.py', 57, 'test_path_endpoint[/comprasContratos/doc/contrato/84650/despesas_acessorias/215]')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/84650/despesas_acessorias/215]>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='endpoint' scope='function' baseid=''>
              request: <SubRequest 'endpoint' for <Function test_path_endpoint[/comprasContratos/doc/contrato/84650/despesas_acessorias/215]>>
          finish pytest_fixture_setup --> /comprasContratos/doc/contrato/84650/despesas_acessorias/215 [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/84650/despesas_acessorias/215]>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/84650/despesas_acessorias/215]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/84650/despesas_acessorias/215]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/84650/despesas_acessorias/215]' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7eff468fbc10>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/84650/despesas_acessorias/215]>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_path_endpoint[/comprasContratos/doc/contrato/84650/despesas_acessorias/215]>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/84650/despesas_acessorias/215]>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/84650/despesas_acessorias/215]' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/84650/despesas_acessorias/215]' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/84650/despesas_acessorias/215]' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7eff468fbc10>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/84650/despesas_acessorias/215]>
            nextitem: <Function test_path_endpoint[/comprasContratos/doc/contrato/50500/empenhos]>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='endpoint' scope='function' baseid=''>
              request: <SubRequest 'endpoint' for <Function test_path_endpoint[/comprasContratos/doc/contrato/84650/despesas_acessorias/215]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/84650/despesas_acessorias/215]>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/84650/despesas_acessorias/215]' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/84650/despesas_acessorias/215]' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/84650/despesas_acessorias/215]' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7eff468fbc10>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/84650/despesas_acessorias/215]
            location: ('endpoints_test.py', 57, 'test_path_endpoint[/comprasContratos/doc/contrato/84650/despesas_acessorias/215]')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_path_endpoint[/comprasContratos/doc/contrato/50500/empenhos]>
          nextitem: <Function test_path_endpoint[/comprasContratos/doc/contrato/2629/empenhos/8415275]>
        pytest_runtest_logstart [hook]
            nodeid: endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/50500/empenhos]
            location: ('endpoints_test.py', 57, 'test_path_endpoint[/comprasContratos/doc/contrato/50500/empenhos]')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/50500/empenhos]>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='endpoint' scope='function' baseid=''>
              request: <SubRequest 'endpoint' for <Function test_path_endpoint[/comprasContratos/doc/contrato/50500/empenhos]>>
          finish pytest_fixture_setup --> /comprasContratos/doc/contrato/50500/empenhos [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/50500/empenhos]>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/50500/empenhos]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/50500/empenhos]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/50500/empenhos]' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7eff468fbc10>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/50500/empenhos]>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_path_endpoint[/comprasContratos/doc/contrato/50500/empenhos]>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/50500/empenhos]>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/50500/empenhos]' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/50500/empenhos]' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/50500/empenhos]' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7eff468fbc10>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/50500/empenhos]>
            nextitem: <Function test_path_endpoint[/comprasContratos/doc/contrato/2629/empenhos/8415275]>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='endpoint' scope='function' baseid=''>
              request: <SubRequest 'endpoint' for <Function test_path_endpoint[/comprasContratos/doc/contrato/50500/empenhos]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/50500/empenhos]>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/50500/empenhos]' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/50500/empenhos]' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/50500/empenhos]' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7eff468fbc10>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/50500/empenhos]
            location: ('endpoints_test.py', 57, 'test_path_endpoint[/comprasContratos/doc/contrato/50500/empenhos]')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_path_endpoint[/comprasContratos/doc/contrato/2629/empenhos/8415275]>
          nextitem: <Function test_path_endpoint[/comprasContratos/doc/contrato/36939/faturas]>
        pytest_runtest_logstart [hook]
            nodeid: endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/2629/empenhos/8415275]
            location: ('endpoints_test.py', 57, 'test_path_endpoint[/comprasContratos/doc/contrato/2629/empenhos/8415275]')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/2629/empenhos/8415275]>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='endpoint' scope='function' baseid=''>
              request: <SubRequest 'endpoint' for <Function test_path_endpoint[/comprasContratos/doc/contrato/2629/empenhos/8415275]>>
          finish pytest_fixture_setup --> /comprasContratos/doc/contrato/2629/empenhos/8415275 [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/2629/empenhos/8415275]>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/2629/empenhos/8415275]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/2629/empenhos/8415275]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/2629/empenhos/8415275]' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7eff468fbc10>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/2629/empenhos/8415275]>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_path_endpoint[/comprasContratos/doc/contrato/2629/empenhos/8415275]>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/2629/empenhos/8415275]>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/2629/empenhos/8415275]' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/2629/empenhos/8415275]' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/2629/empenhos/8415275]' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7eff468fbc10>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/2629/empenhos/8415275]>
            nextitem: <Function test_path_endpoint[/comprasContratos/doc/contrato/36939/faturas]>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='endpoint' scope='function' baseid=''>
              request: <SubRequest 'endpoint' for <Function test_path_endpoint[/comprasContratos/doc/contrato/2629/empenhos/8415275]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/2629/empenhos/8415275]>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/2629/empenhos/8415275]' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/2629/empenhos/8415275]' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/2629/empenhos/8415275]' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7eff468fbc10>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/2629/empenhos/8415275]
            location: ('endpoints_test.py', 57, 'test_path_endpoint[/comprasContratos/doc/contrato/2629/empenhos/8415275]')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_path_endpoint[/comprasContratos/doc/contrato/36939/faturas]>
          nextitem: <Function test_path_endpoint[/comprasContratos/doc/contrato/94113/faturas/78330]>
        pytest_runtest_logstart [hook]
            nodeid: endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/36939/faturas]
            location: ('endpoints_test.py', 57, 'test_path_endpoint[/comprasContratos/doc/contrato/36939/faturas]')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/36939/faturas]>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='endpoint' scope='function' baseid=''>
              request: <SubRequest 'endpoint' for <Function test_path_endpoint[/comprasContratos/doc/contrato/36939/faturas]>>
          finish pytest_fixture_setup --> /comprasContratos/doc/contrato/36939/faturas [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/36939/faturas]>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/36939/faturas]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/36939/faturas]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/36939/faturas]' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7eff468fbc10>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/36939/faturas]>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_path_endpoint[/comprasContratos/doc/contrato/36939/faturas]>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/36939/faturas]>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/36939/faturas]' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/36939/faturas]' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/36939/faturas]' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7eff468fbc10>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/36939/faturas]>
            nextitem: <Function test_path_endpoint[/comprasContratos/doc/contrato/94113/faturas/78330]>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='endpoint' scope='function' baseid=''>
              request: <SubRequest 'endpoint' for <Function test_path_endpoint[/comprasContratos/doc/contrato/36939/faturas]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/36939/faturas]>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/36939/faturas]' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/36939/faturas]' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/36939/faturas]' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7eff468fbc10>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/36939/faturas]
            location: ('endpoints_test.py', 57, 'test_path_endpoint[/comprasContratos/doc/contrato/36939/faturas]')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_path_endpoint[/comprasContratos/doc/contrato/94113/faturas/78330]>
          nextitem: <Function test_path_endpoint[/comprasContratos/doc/contrato/105754/garantias]>
        pytest_runtest_logstart [hook]
            nodeid: endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/94113/faturas/78330]
            location: ('endpoints_test.py', 57, 'test_path_endpoint[/comprasContratos/doc/contrato/94113/faturas/78330]')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/94113/faturas/78330]>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='endpoint' scope='function' baseid=''>
              request: <SubRequest 'endpoint' for <Function test_path_endpoint[/comprasContratos/doc/contrato/94113/faturas/78330]>>
          finish pytest_fixture_setup --> /comprasContratos/doc/contrato/94113/faturas/78330 [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/94113/faturas/78330]>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/94113/faturas/78330]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/94113/faturas/78330]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/94113/faturas/78330]' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7eff468fbc10>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/94113/faturas/78330]>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_path_endpoint[/comprasContratos/doc/contrato/94113/faturas/78330]>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/94113/faturas/78330]>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/94113/faturas/78330]' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/94113/faturas/78330]' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/94113/faturas/78330]' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7eff468fbc10>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/94113/faturas/78330]>
            nextitem: <Function test_path_endpoint[/comprasContratos/doc/contrato/105754/garantias]>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='endpoint' scope='function' baseid=''>
              request: <SubRequest 'endpoint' for <Function test_path_endpoint[/comprasContratos/doc/contrato/94113/faturas/78330]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/94113/faturas/78330]>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/94113/faturas/78330]' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/94113/faturas/78330]' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/94113/faturas/78330]' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7eff468fbc10>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/94113/faturas/78330]
            location: ('endpoints_test.py', 57, 'test_path_endpoint[/comprasContratos/doc/contrato/94113/faturas/78330]')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_path_endpoint[/comprasContratos/doc/contrato/105754/garantias]>
          nextitem: <Function test_path_endpoint[/comprasContratos/doc/contrato/115090/garantias/8423]>
        pytest_runtest_logstart [hook]
            nodeid: endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/105754/garantias]
            location: ('endpoints_test.py', 57, 'test_path_endpoint[/comprasContratos/doc/contrato/105754/garantias]')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/105754/garantias]>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='endpoint' scope='function' baseid=''>
              request: <SubRequest 'endpoint' for <Function test_path_endpoint[/comprasContratos/doc/contrato/105754/garantias]>>
          finish pytest_fixture_setup --> /comprasContratos/doc/contrato/105754/garantias [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/105754/garantias]>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/105754/garantias]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/105754/garantias]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/105754/garantias]' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7eff468fbc10>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/105754/garantias]>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_path_endpoint[/comprasContratos/doc/contrato/105754/garantias]>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/105754/garantias]>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/105754/garantias]' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/105754/garantias]' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/105754/garantias]' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7eff468fbc10>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/105754/garantias]>
            nextitem: <Function test_path_endpoint[/comprasContratos/doc/contrato/115090/garantias/8423]>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='endpoint' scope='function' baseid=''>
              request: <SubRequest 'endpoint' for <Function test_path_endpoint[/comprasContratos/doc/contrato/105754/garantias]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/105754/garantias]>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/105754/garantias]' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/105754/garantias]' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/105754/garantias]' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7eff468fbc10>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/105754/garantias]
            location: ('endpoints_test.py', 57, 'test_path_endpoint[/comprasContratos/doc/contrato/105754/garantias]')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_path_endpoint[/comprasContratos/doc/contrato/115090/garantias/8423]>
          nextitem: <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/historicos]>
        pytest_runtest_logstart [hook]
            nodeid: endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/115090/garantias/8423]
            location: ('endpoints_test.py', 57, 'test_path_endpoint[/comprasContratos/doc/contrato/115090/garantias/8423]')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/115090/garantias/8423]>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='endpoint' scope='function' baseid=''>
              request: <SubRequest 'endpoint' for <Function test_path_endpoint[/comprasContratos/doc/contrato/115090/garantias/8423]>>
          finish pytest_fixture_setup --> /comprasContratos/doc/contrato/115090/garantias/8423 [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/115090/garantias/8423]>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/115090/garantias/8423]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/115090/garantias/8423]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/115090/garantias/8423]' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7eff468fbc10>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/115090/garantias/8423]>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_path_endpoint[/comprasContratos/doc/contrato/115090/garantias/8423]>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/115090/garantias/8423]>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/115090/garantias/8423]' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/115090/garantias/8423]' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/115090/garantias/8423]' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7eff468fbc10>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/115090/garantias/8423]>
            nextitem: <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/historicos]>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='endpoint' scope='function' baseid=''>
              request: <SubRequest 'endpoint' for <Function test_path_endpoint[/comprasContratos/doc/contrato/115090/garantias/8423]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/115090/garantias/8423]>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/115090/garantias/8423]' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/115090/garantias/8423]' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/115090/garantias/8423]' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7eff468fbc10>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/115090/garantias/8423]
            location: ('endpoints_test.py', 57, 'test_path_endpoint[/comprasContratos/doc/contrato/115090/garantias/8423]')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/historicos]>
          nextitem: <Function test_path_endpoint[/comprasContratos/doc/contrato/93390/historicos/337465]>
        pytest_runtest_logstart [hook]
            nodeid: endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/136100/historicos]
            location: ('endpoints_test.py', 57, 'test_path_endpoint[/comprasContratos/doc/contrato/136100/historicos]')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/historicos]>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='endpoint' scope='function' baseid=''>
              request: <SubRequest 'endpoint' for <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/historicos]>>
          finish pytest_fixture_setup --> /comprasContratos/doc/contrato/136100/historicos [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/historicos]>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/136100/historicos]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/136100/historicos]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/136100/historicos]' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7eff468fbc10>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/historicos]>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/historicos]>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/historicos]>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/136100/historicos]' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/136100/historicos]' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/136100/historicos]' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7eff468fbc10>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/historicos]>
            nextitem: <Function test_path_endpoint[/comprasContratos/doc/contrato/93390/historicos/337465]>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='endpoint' scope='function' baseid=''>
              request: <SubRequest 'endpoint' for <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/historicos]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/historicos]>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/136100/historicos]' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/136100/historicos]' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/136100/historicos]' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7eff468fbc10>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/136100/historicos]
            location: ('endpoints_test.py', 57, 'test_path_endpoint[/comprasContratos/doc/contrato/136100/historicos]')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_path_endpoint[/comprasContratos/doc/contrato/93390/historicos/337465]>
          nextitem: <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/itens_compras_contratos]>
        pytest_runtest_logstart [hook]
            nodeid: endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/93390/historicos/337465]
            location: ('endpoints_test.py', 57, 'test_path_endpoint[/comprasContratos/doc/contrato/93390/historicos/337465]')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/93390/historicos/337465]>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='endpoint' scope='function' baseid=''>
              request: <SubRequest 'endpoint' for <Function test_path_endpoint[/comprasContratos/doc/contrato/93390/historicos/337465]>>
          finish pytest_fixture_setup --> /comprasContratos/doc/contrato/93390/historicos/337465 [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/93390/historicos/337465]>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/93390/historicos/337465]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/93390/historicos/337465]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/93390/historicos/337465]' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7eff468fbc10>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/93390/historicos/337465]>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_path_endpoint[/comprasContratos/doc/contrato/93390/historicos/337465]>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/93390/historicos/337465]>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/93390/historicos/337465]' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/93390/historicos/337465]' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/93390/historicos/337465]' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7eff468fbc10>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/93390/historicos/337465]>
            nextitem: <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/itens_compras_contratos]>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='endpoint' scope='function' baseid=''>
              request: <SubRequest 'endpoint' for <Function test_path_endpoint[/comprasContratos/doc/contrato/93390/historicos/337465]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/93390/historicos/337465]>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/93390/historicos/337465]' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/93390/historicos/337465]' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/93390/historicos/337465]' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7eff468fbc10>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/93390/historicos/337465]
            location: ('endpoints_test.py', 57, 'test_path_endpoint[/comprasContratos/doc/contrato/93390/historicos/337465]')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/itens_compras_contratos]>
          nextitem: <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/itens_compras_contratos/853152]>
        pytest_runtest_logstart [hook]
            nodeid: endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/136100/itens_compras_contratos]
            location: ('endpoints_test.py', 57, 'test_path_endpoint[/comprasContratos/doc/contrato/136100/itens_compras_contratos]')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/itens_compras_contratos]>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='endpoint' scope='function' baseid=''>
              request: <SubRequest 'endpoint' for <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/itens_compras_contratos]>>
          finish pytest_fixture_setup --> /comprasContratos/doc/contrato/136100/itens_compras_contratos [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/itens_compras_contratos]>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/136100/itens_compras_contratos]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/136100/itens_compras_contratos]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'endpoints_test.py::test_path_endpoint[/comprasContratos/doc/contrato/136100/itens_compras_contratos]' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7eff468fbc10>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/itens_compras_contratos]>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/itens_compras_contratos]>
    pytest_keyboard_interrupt [hook]
        excinfo: <ExceptionInfo KeyboardInterrupt() tblen=63>
    finish pytest_keyboard_interrupt --> [] [hook]
    pytest_sessionfinish [hook]
        session: <Session tests exitstatus=<ExitCode.INTERRUPTED: 2> testsfailed=0 testscollected=22>
        exitstatus: 2
      pytest_fixture_post_finalizer [hook]
          fixturedef: <FixtureDef argname='endpoint' scope='function' baseid=''>
          request: <SubRequest 'endpoint' for <Function test_path_endpoint[/comprasContratos/doc/contrato/136100/itens_compras_contratos]>>
      finish pytest_fixture_post_finalizer --> [] [hook]
      pytest_terminal_summary [hook]
          terminalreporter: <_pytest.terminal.TerminalReporter object at 0x7eff4686c820>
          exitstatus: 2
          config: <_pytest.config.Config object at 0x7eff468fbc10>
      finish pytest_terminal_summary --> [] [hook]
    finish pytest_sessionfinish --> [] [hook]
    pytest_unconfigure [hook]
        config: <_pytest.config.Config object at 0x7eff468fbc10>
    finish pytest_unconfigure --> [] [hook]
